name: Release

on:
  push:
    tags:
      - "v*.*.*"
    
permissions:
  contents: write
      
jobs:
  create-staging-repository:
   name: Create staging repository
   runs-on: ubuntu-latest
   outputs:
     repository_id: ${{ steps.create.outputs.repository_id }}
   steps:
     - id: create
       uses: nexus-actions/create-nexus-staging-repo@v1.1
       with:
         username: ${{ secrets.OSSRH_USERNAME }}
         password: ${{ secrets.OSSRH_PASSWORD }}
         staging_profile_id: ${{ secrets.SONATYPE_PROFILE_ID }}
         base_url: https://s01.oss.sonatype.org/service/local/
         
  publish:
    needs: create-staging-repository
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:    
    
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      
    - name: Make wrapper executable
      run: chmod +x ./gradlew

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      env: 
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        SIGNING_SECRET_KEY: ${{ secrets.SIGNING_SECRET_KEY }}
        STAGING_REPO_ID: ${{needs.create-staging-repository.outputs.repository_id}}
      with:
        arguments: publishAllPublicationsToSonatypeRepository --max-workers 1
        
  release:
    needs: publish
    runs-on: ubuntu-latest
    steps:
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        body: | 
          ## Gradle 
          ```kotlin 
          implementation("io.github.vincentvibe3:gqlclient:${{ env.RELEASE_VERSION }}")
          ```
        
    - name: Status webhook  
      uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        title: "Release workflow"
        username: GitHub Actions
